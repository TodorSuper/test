<?php

/**
 * +---------------------------------------------------------------------
 * | www.yunputong.com 粮人网
 * +---------------------------------------------------------------------
 * | Copyright (c) 2015 http://www.yunputong.com  All rights reserved.
 * +---------------------------------------------------------------------
 * | APP订单列表相关的操作
 */

namespace Bll\Boss\Order;

use System\Base;

class OrderInfo extends Base {
	public function __construct() {
        parent::__construct();
       
    }
    /*
    * APP订单列表接口
    * Bll.Boss.Order.OrderInfo.lists
    */
    public function lists($params) {
        $_SERVER['HTTP_USER_AGENT'] = POP;
    	$params['page'] = isset($params['pageNumber']) ? $params['pageNumber']:1;
    	$params['page_number'] = isset($params['pageSize']) ? $params['pageSize']:20;
        if (isset($params['sort'])) {
            if ($params['sort'] == 'CREATE_TIME_DESC') {
                $params['sort'] = 'DESC';
            } else {
                $params['sort'] = 'ASC';
            }
        }
        if (isset($params['uc_code'])) unset($params['uc_code']);
    	$res = $this->invoke('Base.OrderModule.B2b.OrderInfo.lists',$params);
    	//组装数据
    	$data = array();
    	if ($res['response']['totalnum'] == 0) {
    		$data['pageTotalItem'] = 0;
    		$data['pageTotalNumber'] = 0;
    		$data['list'] = array();
    	} else {
    		$data['pageTotalNumber'] = $res['response']['total_page'];
    		$data['pageTotalItem'] = $res['response']['totalnum'];
    		foreach($res['response']['lists'] as $k => $v) {
    			$data['lists'][$k]['b2b_code'] = $v['b2b_code'];
    			$data['lists'][$k]['status_message'] = $v['status_message'];
    			$data['lists'][$k]['client_name'] = $v['client_name'];
    			$data['lists'][$k]['commercial_name'] = $v['commercial_name'];
    			$data['lists'][$k]['payMethod'] = $v['payMethod'];
    			$data['lists'][$k]['payType'] = $v['payType'];
    			$data['lists'][$k]['create_time'] = date('Y-m-d H:i:s',$v['create_time']);
    			$data['lists'][$k]['real_amount'] = $v['real_amount'];
    			$data['lists'][$k]['operate'] = $v['operate'];
    		}
    	}
    	return $this->endInvoke($data);
    }
    /*
    * Bll.Boss.Order.OrderInfo.operator
    * APP订单状态操作接口
    */
    public function operator($params) {
        $_SERVER['HTTP_USER_AGENT'] = POP;
        $pop_uc_code = $params['uc_code'];
        if (isset($params['uc_code'])) unset($params['uc_code']);
        try {
            D()->startTrans();
            $apiPath = "Base.OrderModule.B2b.OrderInfo.operate";
            $add_res = $this->invoke($apiPath, $params);

            if ($add_res['status'] != 0) {
                return $this->endInvoke(NULL, $add_res['status'], '', $add_res['message']);
            }
            $params['pay_method'] = $add_res['response']['order_info']['pay_method'];
            $params['pay_type'] = $add_res['response']['order_info']['pay_type'];
            $params['uc_code'] = $pop_uc_code;
            $api = 'Base.OrderModule.B2b.OrderAction.orderActionUp';
            $res = $this->invoke($api,$params);
            if ($res['status'] != 0) {
                return $this->endInvoke(null,$res['status']);
            }
            //订单商品信息
            $order_goods = $add_res['response']['order_goods'];
            $uc_code = $add_res['response']['order_info']['uc_code'];
            $order_info = $add_res['response']['order_info'];
            unset($params['uc_code']);
            //促销商品需要回滚购买数量
            $data = array();
            foreach($order_goods as $k=>$v){
                if(!empty($v['spc_code'])){
                    $data[] = array(
                        'spc_code'=>$v['spc_code'],
                        'number' => $v['goods_number'],
                        'uc_code'=>$uc_code,
                        'spc_type'=>$v['spc_type'],
                    );
                }
            }
            if(!empty($data) && $params['status'] == OC_ORDER_GROUP_STATUS_CANCEL){
                $this->rollbackSpcBuyLimit($data);
            }
            //如果是完成交易  则需要增加客户的订单数和金额
            if($params['status'] == OC_ORDER_GROUP_STATUS_COMPLETE){
                $sc_code = $order_info['sc_code'];
                $amount = $order_info['real_amount'];
                $this->updateCustomerOrderInfo($sc_code, $uc_code, $amount);
            }
            $commit_res = D()->commit();
            if ($commit_res === FALSE) {
                return $this->endInvoke(NULL, 17);
            }
            return $this->endInvoke(TRUE);
        } catch (\Exception $ex) {
            D()->rollback();
            return $this->endInvoke(NULL, 6022);
        }
    }
    private function rollbackSpcBuyLimit($data){
        $apiPath  = "Base.SpcModule.Center.BuyNumber.sub";
        foreach($data as $k=>$v){
            if($v['spc_type'] == SPC_TYPE_LADDER){
                continue;
            }
            $res = $this->invoke($apiPath,$v);
            if($res['status'] != 0){
                throw new \Exception($res['message'],$res['status']);
            }
        }
        return TRUE;
    }
         //更新客户的下单金额  和  下单数量
    private function updateCustomerOrderInfo($sc_code,$uc_code,$amount){
        $apiPath = "Base.UserModule.Customer.Customer.update";
        $data = array(
            'sc_code' => $sc_code,
            'uc_code' => $uc_code,
            'orders'  => 1,
            'order_amount' => $amount,
            'order_time' => NOW_TIME,
        );
        $res = $this->invoke($apiPath,$data);
        if($res['status'] != 0){
            return $this->endInvoke(NULL,$res['status']);
        }
        return TRUE;
    }
    /*
    * Bll.Boss.Order .OrderInfo.get
    * APP订单详情
    */
    public function get($params) {
        $_SERVER['HTTP_USER_AGENT'] = POP;
    	$apiPath = "Base.OrderModule.B2b.OrderInfo.get";
        $order_info_res = $this->invoke($apiPath, $params);
        if (isset($params['uc_code'])) unset($params['uc_code']);
        if ($order_info_res['status'] != 0) {
        	return $this->endInvoke(null,$order_info_res['status']);
        }
        $info = $order_info_res['response'];

        $data['order_info'] = array(
        	'client_name' => $info['order_info']['client_name'],
        	'commercial_name' => $info['order_info']['commercial_name'],
        	'status_message' => $info['order_info']['status_message'],
        	'b2b_code' => $info['order_info']['b2b_code'],
        	'create_time' => date('Y-m-d H:i:s',$info['order_info']['create_time']),
        	'real_name' => $info['order_info']['real_name'],
        	'mobile' => $info['order_info']['mobile'],
        	'address' => $info['order_info']['city'].$info['order_info']['district'].$info['order_info']['address'],
        	'real_amount' => $info['order_info']['real_amount'],
        	'operate' => $info['order_info']['operate'],
            'ship_method_message' => $info['order_info']['ship_method_message']
        );
        $data['pay_info'] = array(
        	'pay_method_message' => isset($info['order_info']['pay_method_message']) ? $info['order_info']['pay_method_message']:'',
        	'pay_type_message' => $info['order_info']['pay_type_message'],
        	'pay_time' => $info['order_info']['pay_time'] != 0 ? date('Y-m-d H:i:s',$info['order_info']['pay_time']):'',
        	'pay_no' => isset($info['pay_info']) ? $info['pay_info']:'',
        );
        $data['order_goods'] = array();

        foreach ($info['order_goods'] as $k => $v) {
        	$data['order_goods'][$k]['goods_name'] = $v['goods_name'];
        	$data['order_goods'][$k]['spec'] = $v['spec'];
        	$data['order_goods'][$k]['goods_price'] = $v['goods_price'];
        	$data['order_goods'][$k]['goods_number'] = $v['goods_number'];
            $data['order_goods'][$k]['packing'] = $v['packing'];
            $data['order_goods'][$k]['spc_flag'] = $v['spc_type'];
        	$data['order_goods'][$k]['spc_type'] = !empty($v['spc_type'])?get_spc($v['spc_type']):'';
        	$data['order_goods'][$k]['spc_message'] = isset($v['spc_message']) ? $v['spc_max_buy'] != 0 ? '限购'.$v['spc_max_buy'].$v['packing'].','.$v['spc_message'] :$v['spc_message'] :'';
            if ($v['spc_type'] == 'LADDER') {
                $data['order_goods'][$k]['spc_message'] = '购买量区间:<br/>'.preg_replace('/购买量区间:/','', $data['order_goods'][$k]['spc_message']);
            }
            if ($v['spc_type'] == 'SPECIAL') {
                $data['order_goods'][$k]['spc_type'] = $v['special_type'] == 'FIXED' ? '一口价':'折扣';
            }
            $data['order_goods'][$k]['special_type'] = isset($v['special_type']) ? $v['special_type']:'';
            $data['order_goods'][$k]['special_type'] = isset($v['special_type']) ? $v['special_type']:'';
        	if (isset($v['spc_goods'])) {
    			$data['order_goods'][$k]['spc_goods']['goods_name'] = $v['spc_goods']['goods_name'];
    			$data['order_goods'][$k]['spc_goods']['goods_price'] = 0;
    			$data['order_goods'][$k]['spc_goods']['goods_number'] = $v['spc_goods']['goods_number'];
    			$data['order_goods'][$k]['spc_goods']['spec'] = $v['spc_goods']['spec'];
                $data['order_goods'][$k]['spc_goods']['packing'] = $v['spc_goods']['packing'];
                $data['order_goods'][$k]['spc_code'] = $v['spc_goods']['b2b_code'];
        	} else {
                $data['order_goods'][$k]['spc_code'] = '';
            }
        }
       
        return $this->endInvoke($data);
    }
 
    /*
    * Bll.Boss.Order .OrderInfo.accountSearch
    * 账期列表
    */
    public function accountSearch($params) {
    	if (isset($params['uc_code'])) unset($params['uc_code']);
   		$params['pageNumber'] = isset($params['pageNumber']) ? $params['pageNumber'] : 1;
   		$params['pageSize']   = isset($params['pageSize']) ? $params['pageSize'] : 20;
        $params['aggre']      = array(array('sum','real_amount','toal_amount'));
        $params['group']      = ' group by commercial_name';
    	$data = $this->invoke('Base.OrderModule.B2b.Account.accountLists',$params);
    	if ($data['status'] == 0) {
    		$newData = array();
            $count = 0;
    		foreach($data['response']['lists'] as $k => $v) {
    			$newData[$v['uc_code']]['commercial_name'] = $v['commercial_name'];
    			$newData[$v['uc_code']]['client_name'] = $v['client_name'];
    			$newData[$v['uc_code']]['mobile'] = $v['mobile'];
    			$newData[$v['uc_code']]['money'] = $v['money'];
                $newData[$v['uc_code']]['o_uc_code'] = $v['uc_code'];
                $count += $v['money'];
    		}
    		if ($data['response']['toal_amount'] == 0) {
    			$this->endInvoke(array('lists'=>array()),0);
    		}
    		$res['lists'] = array_values($newData);
    		$res['toal_amount'] = $count>100000000?99999999.99:$count;
            $res['toal_amount'] = (string)$res['toal_amount'];
    		$res['pageTotalItem'] = $data['response']['totalnum'];
    		$res['pageTotalNumber'] = $data['response']['total_page'];
    		return $this->endInvoke($res);
    	} else {
    		return $this->endInvoke(array('lists'=>array()),$data['status']);
    	}
    }
    /*
    * 账期详情
    * Bll.Boss.Order .OrderInfo.accountInfo
    */
    public function accountInfo($params) {
   
   		$params['pageNumber'] = isset($params['pageNumber']) ? $params['pageNumber'] : 1;
   		$params['pageSize']   = isset($params['pageSize']) ? $params['pageSize'] : 20;
   		if (isset($params['sc_code'])) unset($params['sc_code']);
        $params['uc_code'] = $params['o_uc_code'];
    	$data = $this->invoke('Base.OrderModule.B2b.Account.accountLists',$params);
    	if ($data['status'] != 0) {
    		$this->endInvoke(null,$data['status']);
    	}
    	$sort = array();
    	$result = array();
    	$count = $data['response']['totalnum'];
    	foreach ($data['response']['lists'] as $k => $v) {
    		$result['lists'][$k]['b2b_code'] = $v['b2b_code'];
    		$result['lists'][$k]['commercial_name'] = $v['commercial_name'];
    		$result['lists'][$k]['client_name'] = $v['client_name'];
    		$result['lists'][$k]['money'] = $v['real_amount'];
    		$result['lists'][$k]['type'] = $v['ext4'] == PAY_TYPE_TERM_PERIOD ? '期结' : '月结';
    		$result['lists'][$k]['create_time'] = date('Y-m-d H:i:s',$v['create_time']);
            $time[] = $v['create_time'];
            $result['lists'][$k]['time'] = $v['create_time'];
    		$result['lists'][$k]['end_time'] =  $v['ext4'] == PAY_TYPE_TERM_PERIOD ? date('Y-m-d',$v['create_time']+86400*$v['ext5']): date('Y-m',$v['create_time']).'-'.date('t',$v['create_time']);
    		$result['lists'][$k]['sort'] = $sort[] = strtotime($result['lists'][$k]['end_time']);
    		$result['lists'][$k]['end_time'] = strtotime($result['lists'][$k]['end_time']) >= strtotime(date('Y-m-d'))?$result['lists'][$k]['end_time']:'已到期';
    	}

    	array_multisort($sort,SORT_ASC,SORT_NUMERIC,$time,SORT_DESC,SORT_NUMERIC,$result['lists']);
    	$result['pageTotalItem'] = $count;
    	$result['pageTotalNumber'] = $data['response']['total_page'];
    	return $this->endInvoke($result);
    }
}